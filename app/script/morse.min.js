class t extends Error{constructor(){super("Missing required argument"),this.name="ArgumentError"}}function e(e){if(null==e)throw new t;return e}const r="clock";class s{static configure(t,e){e||=r,t[e]=new this}now(){return(new Date).getTime()}}class i{_time=null;static configure(t,e){e||=r,t[e]=new this}set(t){this._time=t}now(){return this._time}}const n="scheduler";class c{_timeoutIDs=[];static configure(t,e){e||=n,t[e]=new this}schedule(t,e){const r=setTimeout((()=>{t()}),e);this.recordTimeoutID(r)}recordTimeoutID(t){this._timeoutIDs.push(t)}cancelAll(){this._timeoutIDs.forEach((t=>{clearTimeout(t)})),this._timeoutIDs=[]}}class h{_invocations=[];static configure(t,e){e||=n,t[e]=new this}schedule(t,e){this._invocations.push({method:"schedule",arguments:{func:t,delay:e}})}cancelAll(){this._invocations.push({method:"cancelAll"})}hasScheduled(t,e){return this._invocations.some((r=>"schedule"==r.method&&r.arguments.func.toString()===t.toString()&&r.arguments.delay===e))}hasCanceledAll(){return this._invocations.some((t=>"cancelAll"==t.method))}}const o=Object.freeze({dit:".",dah:"-"}),a="signalReader";class u{static configure(t,e,r){r||=a,t[r]=new this(e)}constructor(t){this.elementDuration=e(t)}read(t){return t<=0?"":t<=this.elementDuration?o.dit:o.dah}}class d{_records=[];_element=null;static configure(t,e){e||=a,t[e]=new this}setElement(t){this._element=t}read(t){return this._records.push(t),this._element}hasRead(t){return t?this._records.some((e=>e==t)):this._records.length>0}}class l{_elements=[];constructor(t=[]){this._elements=t}toString(){return this._elements.join("")}addElement(t){this._elements.push(t)}elements(){return this._elements}forEachElement(t){return this._elements.forEach(t)}isEmpty(){return 0==this._elements.length}clear(){this._elements=[]}dup(){return new l(this._elements)}}class m{_characters=[];constructor(t=[]){this._characters=t}toString(){return this._characters.map((t=>t.toString())).join("")}addCharacter(t){this._characters.push(t)}characters(){return this._characters}forEachCharacter(t){return this._characters.forEach(t)}isEmpty(){return 0==this._characters.length}clear(){this._characters=[]}dup(){return new m(this._characters.map((t=>t.dup())))}}class g{static build(t,e={}){t||=8;const r=function(t){return 1.2/t*1e3}(t),i=new g(r,e);return s.configure(i),c.configure(i),u.configure(i,r),i}constructor(t,r={}){this.elementDuration=e(t),this.options=r,this.characterDuration=3*t,this.wordDuration=7*t,this.startSignalTime=null,this.stopSignalTime=null,this.currentCharacter=new l,this.currentWord=new m,this.previousWords=[],i.configure(this),h.configure(this),d.configure(this)}signalOn(){this.scheduler.cancelAll(),this.startSignalTime=this.clock.now()}signalOff(){this.stopSignalTime=this.clock.now(),this.readSignal(),this.scheduler.schedule(this.recordCharacter.bind(this),this.characterDuration),this.scheduler.schedule(this.recordWord.bind(this),this.characterDuration+this.wordDuration)}readSignal(){if(!this.startSignalTime||!this.stopSignalTime)return;const t=this.stopSignalTime-this.startSignalTime,e=this.signalReader.read(t);this.appendElement(e)}appendElement(t){this.currentCharacter.addElement(t),this.options.onCharacterChange&&this.options.onCharacterChange(this.currentCharacter)}recordCharacter(){this.currentCharacter.isEmpty()||(this.currentWord.addCharacter(this.currentCharacter),this.options.onWordChange&&this.options.onWordChange(this.currentWord),this.currentCharacter=new l,this.options.onCharacterChange&&this.options.onCharacterChange(this.currentCharacter))}recordWord(){this.currentWord.isEmpty()||(this.previousWords.push(this.currentWord),this.options.onWordAdded&&this.options.onWordAdded(this.previousWords),this.currentWord=new m,this.options.onWordChange&&this.options.onWordChange(this.currentWord))}}const p={".-":"A","-...":"B","-.-.":"C","-..":"D",".":"E","..-.":"F","--.":"G","....":"H","..":"I",".---":"J","-.-":"K",".-..":"L","--":"M","-.":"N","---":"O",".--.":"P","--.-":"Q",".-.":"R","...":"S","-":"T","..-":"U","...-":"V",".--":"W","-..-":"X","-.--":"Y","--..":"Z"};const _={Encoder:g,Decoder:class{static decodeWords(t){return t.map((t=>this.decodeWord(t))).join(" ")}static decodeWord(t){return t.characters().map(this.decodeCharacter).join("")}static decodeCharacter(t){const e=p[t.toString()];return e||""}}};window.Morse=_;
