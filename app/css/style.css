:root {
  --font-size: 16px;
  --font-line-height: 1;
  --font-family: sans-serif;

  --color-background: black;
  --color-font: white;
  --color-element-off: darkgrey;
  --color-element-on: yellow;

  --bulb-dimension-short: 1rem;
  --bulb-dimension-long: 2rem;
  --bulb-dit-radius: 30%;
  --bulb-dah-radius: 20%;

  --lead-width: 0.25rem;

  --lead-on-animation-duration: 50ms;
  --bulb-on-animation-duration: 25ms;
}

@property --lead-on-percentage {
  syntax: '<percentage>';
  initial-value: 0%;
  inherits: false;
}

@keyframes leadOnAnimation {
  from {
    --lead-on-percentage: 0%;
  }

  to {
    --lead-on-percentage: 100%;
  }
}

@keyframes bulbOnAnimation {
  from {
    --lead-on-percentage: 0%;
  }

  to {
    --lead-on-percentage: 100%;
    box-shadow: 0 0 48px 4px var(--color-element-on);
  }
}

@keyframes elementOffAnimation {
  from {
    --lead-on-percentage: 0%;
  }

  to {
    --lead-on-percentage: 100%;
    box-shadow: none;
  }
}

body {
  font-family: var(--font-family);
  font-size: var(--font-size);
  line-height: var(--font-line-height);

  color: var(--color-font);
  background-color: var(--color-background);
}

main {
  display: flex;
  flex-direction: column;
  padding: 1rem;

  /* temporary */
  align-items: center;
  width: 28rem;
  gap: 1.5rem;
}

button.signal-on {
  width: fit-content;
}

.morse-tree {
  display: grid;
  width: 24rem;
  height: 24rem;

  grid-template-columns: repeat(3, 4fr) 2fr repeat(4, 3fr);
  grid-template-rows: repeat(7, 1fr);

  grid-template-areas:
    "o m t root e i s h"
    "q g n .    a u v ."
    ". z n .    a f . ."
    "y k n .    a r l ."
    ". c d .    w . . ."
    ". x d .    w p . ."
    ". . b .    j . . .";
}

.morse-element {
  display: grid;

  &.root {
    align-items: end;
    justify-content: center;
  }

  /* Specialized adjustment for the root node */
  &#morse-element-e .lead {
    width: calc(100% + 0.5rem);
    transform: translateX(-0.5rem);
  }

  &.right {
    grid-template-columns: 1fr auto;
    grid-template-rows: 1fr auto;

    grid-template-areas:
      ".    label"
      "lead bulb";

    .label {
      align-self: end;
      justify-self: center;
      margin-bottom: 0.25rem;
    }

    .lead {
      width: 100%;
      height: var(--lead-width);
      align-self: center;
    }

    .lead, .bulb {
      background: linear-gradient(to right, var(--color-element-on) var(--lead-on-percentage), var(--color-element-off) var(--lead-on-percentage));
    }
  }

  &.left {
    grid-template-columns: auto 1fr;
    grid-template-rows: 1fr auto;

    grid-template-areas:
      "label .   "
      "bulb  lead";

    .label {
      align-self: end;
      justify-self: center;
      margin-bottom: 0.25rem;
    }

    .lead {
      width: calc(100% + 0.5rem);
      transform: translateX(0);
      height: var(--lead-width);
      align-self: center;
    }

    .lead, .bulb {
      background: linear-gradient(to left, var(--color-element-on) var(--lead-on-percentage), var(--color-element-off) var(--lead-on-percentage));
    }
  }

  &.left.down {
    grid-template-columns: var(--bulb-dimension-long) 1fr;
    grid-template-rows: 1fr auto;

    grid-template-areas:
      "lead  .    "
      "bulb  label";

    .label {
      align-self: end;
      justify-self: start;
      margin: 0 0 0 -0.25rem;
    }

    .lead {
      width: var(--lead-width);
      height: 100%;
      justify-self: center;
    }

    .bulb {
      align-self: end;
      justify-self: center;
    }

    .lead, .bulb {
      background: linear-gradient(to bottom, var(--color-element-on) var(--lead-on-percentage), var(--color-element-off) var(--lead-on-percentage));
    }
  }

  &.right.down {
    grid-template-columns: 1fr auto;
    grid-template-rows: 1fr auto;

    grid-template-areas:
      ".     lead"
      "label bulb";

    .label {
      align-self: end;
      justify-self: end;
      margin: 0 0.25rem 0 0;
    }

    .bulb {
      align-self: end;
      justify-self: center;
    }

    .lead {
      width: var(--lead-width);
      height: 100%;
      justify-self: center;
    }

    .lead, .bulb {
      background: linear-gradient(to bottom, var(--color-element-on) var(--lead-on-percentage), var(--color-element-off) var(--lead-on-percentage));
    }
  }

  .label {
    grid-area: label;
  }

  .lead {
    grid-area: lead;
    z-index: -1;
  }

  .bulb {
    grid-area: bulb;

    &.dit {
      width: var(--bulb-dimension-short);
      height: var(--bulb-dimension-short);
      border-radius: var(--bulb-dit-radius);
    }

    &.dah {
      border-radius: var(--bulb-dah-radius);

      &.horizontal {
        width: var(--bulb-dimension-long);
        height: var(--bulb-dimension-short);
      }

      &.vertical {
        width: var(--bulb-dimension-short);
        height: var(--bulb-dimension-long);
      }
    }
  }

  .bulb {
    background-color: var(--color-element-off);
  }

  &.on {
    color: var(--color-element-on);

    .lead {
      animation: leadOnAnimation var(--lead-on-animation-duration) forwards;
    }

    .bulb {
      animation: bulbOnAnimation var(--bulb-on-animation-duration) var(--lead-on-animation-duration) forwards;
    }
  }
}

#morse-element-root { grid-area: root; }
#morse-element-a { grid-area: a; }
#morse-element-b { grid-area: b; }
#morse-element-c { grid-area: c; }
#morse-element-d { grid-area: d; }
#morse-element-e { grid-area: e; }
#morse-element-f { grid-area: f; }
#morse-element-g { grid-area: g; }
#morse-element-h { grid-area: h; }
#morse-element-i { grid-area: i; }
#morse-element-j { grid-area: j; }
#morse-element-k { grid-area: k; }
#morse-element-l { grid-area: l; }
#morse-element-m { grid-area: m; }
#morse-element-n { grid-area: n; }
#morse-element-o { grid-area: o; }
#morse-element-p { grid-area: p; }
#morse-element-q { grid-area: q; }
#morse-element-r { grid-area: r; }
#morse-element-s { grid-area: s; }
#morse-element-t { grid-area: t; }
#morse-element-u { grid-area: u; }
#morse-element-v { grid-area: v; }
#morse-element-w { grid-area: w; }
#morse-element-x { grid-area: x; }
#morse-element-y { grid-area: y; }
#morse-element-z { grid-area: z; }

