:root {
  --font-size: 16px;
  --font-weight: 400;
  --font-weight-semibold: 600;
  --font-line-height: 1.5;
  --font-line-height-small: 1;
  --font-family-body: "Roboto", sans-serif;
  --font-family-header: "Maven Pro", sans-serif;

  --color-background: #3A5982;
  --color-panel: #416596;
  --color-element-off: #2F486B;
  --color-element-on: #F2CC39;
  --color-button: #769ED2;
  --color-button-icon: var(--color-font);
  --color-font: #E6EEF9;

  --bulb-dimension-short: 1rem;
  --bulb-dimension-long: 2rem;
  --bulb-dit-radius: 30%;
  --bulb-dah-radius: 20%;

  --lead-width: 0.25rem;

  --lead-on-animation-duration: 50ms;
  --bulb-on-animation-duration: 25ms;
  --lead-off-animation-duration: 50ms;
  --bulb-off-animation-duration: 25ms;
}

@property --lead-on-percentage {
  syntax: '<percentage>';
  initial-value: 0%;
  inherits: false;
}

@keyframes leadOnAnimation {
  from {
    --lead-on-percentage: 0%;
  }

  to {
    --lead-on-percentage: 100%;
  }
}

@keyframes bulbOnAnimation {
  from {
    --lead-on-percentage: 0%;
  }

  to {
    --lead-on-percentage: 100%;
    box-shadow: 0 0 3rem 0.25rem var(--color-element-on);
  }
}

@keyframes elementOffAnimation {
  from {
    --lead-on-percentage: 0%;
  }

  to {
    --lead-on-percentage: 100%;
    box-shadow: none;
  }
}

html {
  height: 100%;
  overflow-x: hidden;
}

body {
  display: flex;
  flex-direction: column;
  align-items: center;

  height: 100%;
  padding: 2rem;

  font-family: var(--font-family-body);
  font-size: var(--font-size);
  font-weight: var(--font-weight);
  line-height: var(--font-line-height);

  color: var(--color-font);
  background-color: var(--color-background);
}

main {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 0 auto 1fr 3.875rem auto;
  transition: grid-template-rows 300ms;

  position: relative;

  width: 60ch;
  max-width: 100%;
  height: 100%;
  padding: 2rem;
  gap: 1.5rem;

  overflow: hidden;

  &:not(.settings-open) {
    h1 {
      margin-top: -1rem;
    }
  }

  &.settings-open {
    grid-template-rows: 3.5rem auto 1fr 3.875rem auto;
  }
}

h1 {
  font-family: var(--font-family-header);
  font-weight: var(--font-weight-semibold);
  line-height: var(--font-line-height-small);
  font-size: 2rem;
  font-optical-sizing: auto;
  text-transform: uppercase;
  text-align: center;
  transition: margin 300ms;
}

.settings-toggle {
  --color: var(--color-button);

  position: absolute;
  right: 0;
  top: 0;

  display: grid;
  align-items: center;
  justify-content: center;
  color: var(--color);

  width: 3rem;
  height: 3rem;
  border-radius: 0 0 0 0.5rem;

  cursor: pointer;
}

.settings {
  display: flex;
  flex-direction: column;
  overflow: hidden;

  .words-per-minute {
    display: grid;
    row-gap: 0.5rem;
    column-gap: 1rem;
    grid-template-columns: 1fr 2rem;
    grid-template-rows: auto auto;
    grid-template-areas:
      "label label"
      "input value";

    label {
      grid-area: label;
    }

    input {
      grid-area: input;
    }

    .value {
      grid-area: value;
      text-align: right;
    }
  }
}

input[type="range"]::-webkit-slider-runnable-track {
  background: var(--color-element-off);
  height: 0.5rem;
  border-radius: 0.25rem;
}

input[type="range"]::-moz-range-track {
  background: var(--color-element-off);
  height: 0.5rem;
  border-radius: 0.25rem;
}

input[type="range"]::-webkit-slider-thumb {
  background-color: var(--color-font);
  margin-top: -0.25rem;
  height: 1rem;
  width: 1rem;
  border-radius: 0.75rem;
  box-shadow: -0.1rem 0.1rem var(--color-element-off);
}

input[type="range"]::-moz-range-thumb {
  background-color: var(--color-font);
  height: 1rem;
  width: 1rem;
  border-radius: 0.75rem;
  box-shadow: -0.1rem 0.1rem var(--color-element-off);
}

.actions {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
}

button.signal-on {
  --color-foreground: var(--color-button);
  --color-background: color-mix(in HSL, var(--color-foreground) 60%, black);
  --color-outline: var(--color-button-icon);
  --icon-size: 2rem;
  --button-radius: 0.75rem;

  padding: 0;
  border: none;
  border-radius: var(--button-radius);
  color: var(--color-button-icon);
  background: var(--color-background);
  cursor: pointer;

  &:focus {
    outline: 2px solid var(--color-outline);
    outline-offset: 0.10rem;
  }

  &:active span {
    transform: translateY(-2px);
  }

  span {
    display: block;
    padding: 0.25rem 0.25rem 0.10rem 0.25rem;
    background: var(--color-foreground);

    border-radius: var(--button-radius);
    transform: translateY(-0.25rem);

    svg {
      width: var(--icon-size);
      height: var(--icon-size);
    }
  }
}

.no-wrap {
  white-space: nowrap;
}

.panel {
  --color-shadow: color-mix(in HSL, var(--color-background) 90%, black);

  background-color: var(--color-panel);
  border-radius: 1.5rem;
  z-index: 0;

  box-shadow: -0.25rem 0.25rem var(--color-shadow);
}

.output {
  --color-input-border: var(--color-element-off);
  --color-input-background: #395983;
  --color-previous-words: #7FA7DB;
  --color-current-word: var(--color-font);
  --color-current-character: var(--color-element-on);

  padding: 1rem;
  white-space: nowrap;
  overflow-x: auto;
  overflow-y: hidden;

  background-color: var(--color-input-background);
  border: 3px solid var(--color-input-border);
  border-radius: 1rem;

  #previous-words {
    color: var(--color-previous-words);

    &:not(:empty) {
      margin-right: 0.5ch;
    }
  }

  #current-word {
    color: var(--color-current-word);
  }

  #current-character {
    color: var(--color-current-character);
  }
}

.morse-tree {
  display: grid;
  align-self: stretch;

  height: 24rem;
  line-height: var(--font-line-height-small);

  grid-template-columns: repeat(3, 4fr) auto repeat(4, 3fr);
  grid-template-rows: repeat(7, 1fr);

  grid-template-areas:
    "o m t root e i s h"
    "q g n .    a u v ."
    ". z n .    a f . ."
    "y k n .    a r l ."
    ". c d .    w . . ."
    ". x d .    w p . ."
    ". . b .    j . . .";
}

.morse-element {
  --color-element-gradient-start: var(--color-element-on);
  --color-element-gradient-end: var(--color-element-off);

  display: grid;

  .label {
    grid-area: label;
  }

  &.root {
    align-items: end;
    justify-content: center;
  }

  .lead, .bulb {
    background: linear-gradient(
      var(--gradient-direction),
      var(--color-element-gradient-start) var(--lead-on-percentage),
      var(--color-element-gradient-end) var(--lead-on-percentage)
    );
  }

  .lead {
    grid-area: lead;
    z-index: -1;
  }

  .bulb {
    grid-area: bulb;

    &.dit {
      width: var(--bulb-dimension-short);
      height: var(--bulb-dimension-short);
      border-radius: var(--bulb-dit-radius);
    }

    &.dah {
      border-radius: var(--bulb-dah-radius);

      &.horizontal {
        width: var(--bulb-dimension-long);
        height: var(--bulb-dimension-short);
      }

      &.vertical {
        width: var(--bulb-dimension-short);
        height: var(--bulb-dimension-long);
      }
    }

    &.root {
      width: calc(var(--bulb-dimension-short) * 0.5);
      height: calc(var(--bulb-dimension-long) * 1.25);
      border-radius: var(--bulb-dah-radius);
      background: var(--color-element-off);
    }
  }

  &.right {
    --gradient-direction: to right;

    grid-template-columns: 1fr auto;
    grid-template-rows: 1fr auto;

    grid-template-areas:
      ".    label"
      "lead bulb";

    .label {
      align-self: end;
      justify-self: center;
      margin-bottom: 0.25rem;
    }

    .lead {
      width: 100%;
      height: var(--lead-width);
      align-self: center;
    }
  }

  &.left {
    --gradient-direction: to left;

    grid-template-columns: auto 1fr;
    grid-template-rows: 1fr auto;

    grid-template-areas:
      "label .   "
      "bulb  lead";

    .label {
      align-self: end;
      justify-self: center;
      margin-bottom: 0.25rem;
    }

    .lead {
      width: calc(100% + 0.5rem);
      transform: translateX(0);
      height: var(--lead-width);
      align-self: center;
    }
  }

  &.left.down {
    --gradient-direction: to bottom;

    grid-template-columns: var(--bulb-dimension-long) 1fr;
    grid-template-rows: 1fr auto;

    grid-template-areas:
      "lead  .    "
      "bulb  label";

    .label {
      align-self: end;
      justify-self: start;
      margin: 0 0 0 -0.25rem;
    }

    .lead {
      width: var(--lead-width);
      height: 100%;
      justify-self: center;
    }

    .bulb {
      align-self: end;
      justify-self: center;
    }
  }

  &.right.down {
    --gradient-direction: to bottom;

    grid-template-columns: 1fr auto;
    grid-template-rows: 1fr auto;

    grid-template-areas:
      ".     lead"
      "label bulb";

    .label {
      align-self: end;
      justify-self: end;
      margin: 0 0.25rem 0 0;
    }

    .bulb {
      align-self: end;
      justify-self: center;
    }

    .lead {
      width: var(--lead-width);
      height: 100%;
      justify-self: center;
    }
  }

  &.on {
    color: var(--color-element-on);

    .lead {
      animation: leadOnAnimation var(--lead-on-animation-duration) forwards;
    }

    .bulb {
      animation: bulbOnAnimation var(--bulb-on-animation-duration) var(--lead-on-animation-duration) forwards;
    }

    &.root {
      .bulb {
        animation: none;
        background: var(--color-element-on);
        box-shadow: 0 0 3rem 0.25rem var(--color-element-on);
      }
    }
  }

  &.turning-off {
    --color-element-gradient-start: var(--color-element-off);
    --color-element-gradient-end: var(--color-element-on);

    .lead {
      animation: elementOffAnimation var(--lead-off-animation-duration) forwards;
    }

    .bulb {
      animation: elementOffAnimation var(--bulb-off-animation-duration) var(--lead-off-animation-duration) forwards;
    }

    &[data-element-distance="2"] * {
      animation-delay: calc(var(--lead-off-animation-duration) + var(--bulb-off-animation-duration));
    }

    &[data-element-distance="3"] * {
      animation-delay: calc(2 * var(--lead-off-animation-duration) + var(--bulb-off-animation-duration));
    }

    &[data-element-distance="4"] * {
      animation-delay: calc(3 * var(--lead-off-animation-duration) + var(--bulb-off-animation-duration));
    }
  }
}

#morse-element-root { grid-area: root; }
#morse-element-a { grid-area: a; }
#morse-element-b { grid-area: b; }
#morse-element-c { grid-area: c; }
#morse-element-d { grid-area: d; }
#morse-element-e { grid-area: e; }
#morse-element-f { grid-area: f; }
#morse-element-g { grid-area: g; }
#morse-element-h { grid-area: h; }
#morse-element-i { grid-area: i; }
#morse-element-j { grid-area: j; }
#morse-element-k { grid-area: k; }
#morse-element-l { grid-area: l; }
#morse-element-m { grid-area: m; }
#morse-element-n { grid-area: n; }
#morse-element-o { grid-area: o; }
#morse-element-p { grid-area: p; }
#morse-element-q { grid-area: q; }
#morse-element-r { grid-area: r; }
#morse-element-s { grid-area: s; }
#morse-element-t { grid-area: t; }
#morse-element-u { grid-area: u; }
#morse-element-v { grid-area: v; }
#morse-element-w { grid-area: w; }
#morse-element-x { grid-area: x; }
#morse-element-y { grid-area: y; }
#morse-element-z { grid-area: z; }

@media (max-width: 600px) {
  body {
    padding: 1rem;
  }

  main {
    padding: 1.5rem;

    &:not(.settings-open) {
      h1 {
        margin-top: 0;
      }
    }
  }

  .output {
    padding: 0.75rem;
  }
}

@media (max-width: 600px) and (max-height : 844px) {
  main {
    grid-template-rows: 0 auto 1fr auto;

    .output {
      display: none;
    }

    &.settings-open {
      grid-template-rows: 3.5rem auto 1fr auto;
    }
  }
}
